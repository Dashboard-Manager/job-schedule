# Generated by Django 4.1.6 on 2023-02-15 16:43

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "identificator",
                    models.CharField(
                        editable=False,
                        max_length=6,
                        unique=True,
                        verbose_name="User identificator",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        default=datetime.datetime(
                            2007, 2, 19, 16, 43, 0, 321362, tzinfo=datetime.timezone.utc
                        ),
                        verbose_name="Birth date",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Financials",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contract",
                    models.CharField(
                        choices=[
                            ("employment", "Employment contract)"),
                            ("commission", "Commission contract"),
                            ("specific-task", "Specific-task contract"),
                            (
                                "commission with economic entity",
                                "Commission contract with an economic entity",
                            ),
                            (
                                "intership",
                                "Student and postgraduate internship contract",
                            ),
                        ],
                        default="employment",
                        max_length=50,
                        verbose_name="Type of contract",
                    ),
                ),
                (
                    "student",
                    models.BooleanField(default=False, verbose_name="Student status"),
                ),
                (
                    "work_in_the_place_of_residence",
                    models.BooleanField(
                        default=True, verbose_name="Work in the place of residence"
                    ),
                ),
                (
                    "voluntary_health_insurance",
                    models.BooleanField(
                        default=True, verbose_name="Volunatry health insurance"
                    ),
                ),
                (
                    "health_insurance",
                    models.FloatField(
                        default=2.45, verbose_name="Value of health insurance"
                    ),
                ),
                (
                    "joint_taxation_of_spouses",
                    models.BooleanField(
                        default=False, verbose_name="Joint taxation of spouses"
                    ),
                ),
                (
                    "salary",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(
                                limit_value=0, message="Salary cannot be less than 0"
                            ),
                            django.core.validators.MaxValueValidator(
                                limit_value=9999999999,
                                message="Sorry, but we need to have some limits",
                            ),
                        ],
                        verbose_name="Brutto salary",
                    ),
                ),
                (
                    "hourly_pay",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(
                                limit_value=0, message="Salary cannot be less than 0"
                            ),
                            django.core.validators.MaxValueValidator(
                                limit_value=9999999999,
                                message="Sorry, but we need to have some limits",
                            ),
                        ],
                        verbose_name="Hourly brutto pay",
                    ),
                ),
                (
                    "extra_hourly_pay",
                    models.FloatField(
                        default=0.0,
                        help_text="Extra pay for overtime",
                        validators=[
                            django.core.validators.MinValueValidator(
                                limit_value=0, message="Salary cannot be less than 0"
                            ),
                            django.core.validators.MaxValueValidator(
                                limit_value=9999999999,
                                message="Sorry, but we need to have some limits",
                            ),
                        ],
                        verbose_name="Hourly extra brutto pay",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="financials",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
        ),
    ]
