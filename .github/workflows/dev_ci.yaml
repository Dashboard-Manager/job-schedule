name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
    DOCKER_BUILDKIT: 1
    COMPOSE_DOCKER_CLI_BUILD: 1

on:
    pull_request:
        branches: ["main", "develop"]

    push:
        branches: ["main", "develop"]

jobs:
    dev:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.10.7"]
                poetry-version: ["1.3.2"]
        steps:
            - name: Checkout Code Repository
              uses: actions/checkout@v3
            - name: Setup Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}
                  architecture: x64
            - name: Setup poetry ${{ matrix.poetry-version }}
              shell: bash
              run: pipx install poetry==${{ matrix.poetry-version }}
            - name: Install poetry ${{ matrix.poetry-version }}
              shell: bash
              run: |
                  cd backend
                  poetry export --with production --with dev -f requirements.txt --output requirements.txt
                  pip install -r requirements.txt

    django:
        runs-on: ubuntu-latest
        needs: dev
        steps:
            - name: Checkout Code Repository
              uses: actions/checkout@v3
            - name: Build the Stack
              run: docker-compose build
            - name: Run DB Migrations
              run: docker-compose run --rm django python manage.py migrate

    pytest:
        runs-on: ubuntu-latest
        needs: django
        steps:
            - name: Checkout Code Repository
              uses: actions/checkout@v3
            - name: Run Django Tests
              run: docker-compose run django coverage run -m pytest
            - name: Generate coverage.lcov
              run: docker-compose run django coverage lcov
            - name: Tear down the Stack
              run: docker-compose down
            - name: Coveralls GitHub Action
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  path-to-lcov: "./backend/coverage.lcov"
                  base-path: "./backend"
              uses: coverallsapp/github-action@1.1.3

    mypy:
        runs-on: ubuntu-latest
        needs: django
        steps:
            - name: Checkout Code Repository
              uses: actions/checkout@v3
            - name: Checkout mypy
              run: docker-compose run django mypy . --config-file mypy.ini

    cypress-run:
        runs-on: ubuntu-latest
        container:
            image: cypress/browsers
            options: --user 1001
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Cypress run
              uses: cypress-io/github-action@v5.0.2
              with:
                  browser: firefox
                  working-directory: frontend
    jest-run:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Jest run
              uses: npm run jest
              with:
                  browser: firefox
                  working-directory: frontend
